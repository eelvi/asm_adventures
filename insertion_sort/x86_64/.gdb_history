x /gw $rsp+0x20
si
x /gw $rsp+0x38
x /gw $rsp+0x30
make
r
c
c
c
c
r
c
c
c
r
c
si
set disassemble-next-line on
si
si
x $rbp+0x38
x $rbp+0x30
x *((void*)$rbp+0x30)
x *((void*)($rbp+0x30))
x *((char*)($rbp+0x30))
si
r
y
r
r
c
x rdx
x $rdx
x $rbp+0x30
x $rbp+0x38
x $rbp+0x10
x $rbp+0x18
x $rbp+0x20
x $rbp+0x28
x $rbp+0x30
x $rbp+0x38
x $rbp+0x40
x $rbp+0x48
x $rbp+0x50
x $rbp+0x38

x (char*)($rbp+0x38)
x *(char*)($rbp+0x38)
x *(char*)($rbp+0x40)
x *(char*)($rbp+0x30)
r
si
p $rdi
p /x  $rdi
s
print $rax
print /x $rax
x /x $rax
x /x $rdi
x /x $rsi
p $rsi
info registers 
r
c
c
c
si
r
si
p $rax
x $rax
x /d $rax
x /d $rax+8
x /d $rax+16
x /d $rax+32
p $rax
p/x $rax
p/x $rdi
p/x $rsi
si
p $esp
p /x $esp
x /x $esp
si
x /x $rsp
x /x $rsp-0x8
x /x $rsp-0x10
x /x $rsp-0x18
x /x $rsp-0x20
x /x $rsp-0x28
x /x $rsp-0x30
x /d $rsp-0x30
r ../randfile
s
r
n
c
s
r
r
n
c
s
r
c
s
r
c
make
q
b main 
r
n
r
r
n
r
r ../randfile50 
n
p length 
n
p array 
n
p length 
n
si
set disassemble-next-line on
si
x $rsp
x $rsp-0x8
x $rsp-0x16
x $rsp-0x18
x $rsp-0x20
x $rsp-0x28
x $rsp+0x8
x $rsp+0x10
x $rsp+0x18
si
x $rsp+0x28
x $rsp+0x30
x $rsp+0x38
si
p $rdx
x $rdx
si
p $rcx
disassemble 
x $rdx
x $rbp+0x30
p/x $rdx
p/x $rcx
make
r
c
disassemble 
c
r
n
r
c
r
n
b
si
c
r
c
n
si
si
q
r ../randfile
n
r
r
n
r
b main 
r
n
b
s
r
r
c
p array 
p array[0]
p array[2]
p length 
s
r
c
si
x $rsp-8
x $rsp-16
x $rsp+8
x $rsp+16
x $rsp+24
x $rsp+16
x *(long long*)($rsp+16)
x *(long long*)(0x55554870)
si
p $rsp
si
p $rbp
si
p $rcx
si
p $rcx
x [rbp+38]
x $rbp+38
x $rbp+0x38
x /g $rbp+0x38
q
b main 
r
ni
n
r
n
r ../randfile
n
s
r
n
si
b
si
si
p $rdx
si
p $rcx
si
p $rcx
p $rdx
p /x $rdx
si
x $edx
x $rdx
x /d $rdx
si
r
q
q
r ../randfile
b main 
r
n
si
b
si
x (rbx+rdx)
x ($rbx+$rdx)
x ($rbx+$rdx+8)
x ($rbx+$rdxr)
q
